{
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\zaitoft\\\\Documents\\\\GitHub\\\\EzTaskber\\\\Backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\zaitoft\\\\Documents\\\\GitHub\\\\EzTaskber\\\\Backend\",\"filename\":\"C:\\\\Users\\\\zaitoft\\\\Documents\\\\GitHub\\\\EzTaskber\\\\Backend\\\\src\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\zaitoft\\\\Documents\\\\GitHub\\\\EzTaskber\\\\Backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.5": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend",
      "filename": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\index.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _app = _interopRequireDefault(require(\"./app\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n_app[\"default\"].listen(_app[\"default\"].get(\"port\"));\n\nconsole.log(\"Server on port\", _app[\"default\"].get(\"port\"));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsImxpc3RlbiIsImdldCIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7QUFFQUEsZ0JBQUlDLE1BQUosQ0FBV0QsZ0JBQUlFLEdBQUosQ0FBUSxNQUFSLENBQVg7O0FBRUFDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGdCQUFaLEVBQThCSixnQkFBSUUsR0FBSixDQUFRLE1BQVIsQ0FBOUIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFx6YWl0b2Z0XFxEb2N1bWVudHNcXEdpdEh1YlxcRXpUYXNrYmVyXFxCYWNrZW5kXFxzcmNcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhcHAgZnJvbSBcIi4vYXBwXCI7XHJcblxyXG5hcHAubGlzdGVuKGFwcC5nZXQoXCJwb3J0XCIpKTtcclxuXHJcbmNvbnNvbGUubG9nKFwiU2VydmVyIG9uIHBvcnRcIiwgYXBwLmdldChcInBvcnRcIikpO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "listen",
        "get",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;;;AAEAA,gBAAIC,MAAJ,CAAWD,gBAAIE,GAAJ,CAAQ,MAAR,CAAX;;AAEAC,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BJ,gBAAIE,GAAJ,CAAQ,MAAR,CAA9B",
      "sourceRoot": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\",
      "sourcesContent": [
        "import app from \"./app\";\r\n\r\napp.listen(app.get(\"port\"));\r\n\r\nconsole.log(\"Server on port\", app.get(\"port\"));\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1634888861961
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\zaitoft\\\\Documents\\\\GitHub\\\\EzTaskber\\\\Backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\zaitoft\\\\Documents\\\\GitHub\\\\EzTaskber\\\\Backend\",\"filename\":\"C:\\\\Users\\\\zaitoft\\\\Documents\\\\GitHub\\\\EzTaskber\\\\Backend\\\\src\\\\app.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\zaitoft\\\\Documents\\\\GitHub\\\\EzTaskber\\\\Backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.5": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend",
      "filename": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\app.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\app.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\",
        "sourceFileName": "app.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _products = _interopRequireDefault(require(\"./routes/products.routes\"));\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _config = _interopRequireDefault(require(\"./config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])(); // importar el modulo expres\n// settings\n\napp.set(\"port\", _config[\"default\"].port); // Middlewares\n\napp.use((0, _cors[\"default\"])());\napp.use((0, _morgan[\"default\"])(\"dev\"));\napp.use(_express[\"default\"].urlencoded({\n  extended: false\n}));\napp.use(_express[\"default\"].json()); // Routes\n\napp.use(\"/api\", _products[\"default\"]);\nvar _default = app;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhcHAiLCJzZXQiLCJjb25maWciLCJwb3J0IiwidXNlIiwiZXhwcmVzcyIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImpzb24iLCJwcm9kdWN0Um91dGVzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUE7Ozs7QUFFQSxJQUFNQSxHQUFHLEdBQUcsMEJBQVosQyxDQUF3QjtBQUd4Qjs7QUFDQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsTUFBUixFQUFnQkMsbUJBQU9DLElBQXZCLEUsQ0FFQTs7QUFDQUgsR0FBRyxDQUFDSSxHQUFKLENBQVEsdUJBQVI7QUFDQUosR0FBRyxDQUFDSSxHQUFKLENBQVEsd0JBQU8sS0FBUCxDQUFSO0FBQ0FKLEdBQUcsQ0FBQ0ksR0FBSixDQUFRQyxvQkFBUUMsVUFBUixDQUFtQjtBQUFFQyxFQUFBQSxRQUFRLEVBQUU7QUFBWixDQUFuQixDQUFSO0FBQ0FQLEdBQUcsQ0FBQ0ksR0FBSixDQUFRQyxvQkFBUUcsSUFBUixFQUFSLEUsQ0FHQTs7QUFDQVIsR0FBRyxDQUFDSSxHQUFKLENBQVEsTUFBUixFQUFnQkssb0JBQWhCO2VBRWVULEciLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFx6YWl0b2Z0XFxEb2N1bWVudHNcXEdpdEh1YlxcRXpUYXNrYmVyXFxCYWNrZW5kXFxzcmNcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gXCJleHByZXNzXCI7XHJcbmltcG9ydCBjb3JzIGZyb20gXCJjb3JzXCI7XHJcbmltcG9ydCBwcm9kdWN0Um91dGVzIGZyb20gXCIuL3JvdXRlcy9wcm9kdWN0cy5yb3V0ZXNcIjtcclxuaW1wb3J0IG1vcmdhbiBmcm9tIFwibW9yZ2FuXCI7XHJcblxyXG5pbXBvcnQgY29uZmlnIGZyb20gXCIuL2NvbmZpZ1wiO1xyXG5cclxuY29uc3QgYXBwID0gZXhwcmVzcygpOyAgLy8gaW1wb3J0YXIgZWwgbW9kdWxvIGV4cHJlc1xyXG5cclxuXHJcbi8vIHNldHRpbmdzXHJcbmFwcC5zZXQoXCJwb3J0XCIsIGNvbmZpZy5wb3J0KTtcclxuXHJcbi8vIE1pZGRsZXdhcmVzXHJcbmFwcC51c2UoY29ycygpKTtcclxuYXBwLnVzZShtb3JnYW4oXCJkZXZcIikpO1xyXG5hcHAudXNlKGV4cHJlc3MudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiBmYWxzZSB9KSk7XHJcbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpO1xyXG5cclxuXHJcbi8vIFJvdXRlc1xyXG5hcHAudXNlKFwiL2FwaVwiLCBwcm9kdWN0Um91dGVzKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGFwcDtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "app",
        "set",
        "config",
        "port",
        "use",
        "express",
        "urlencoded",
        "extended",
        "json",
        "productRoutes"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;;;AAEA,IAAMA,GAAG,GAAG,0BAAZ,C,CAAwB;AAGxB;;AACAA,GAAG,CAACC,GAAJ,CAAQ,MAAR,EAAgBC,mBAAOC,IAAvB,E,CAEA;;AACAH,GAAG,CAACI,GAAJ,CAAQ,uBAAR;AACAJ,GAAG,CAACI,GAAJ,CAAQ,wBAAO,KAAP,CAAR;AACAJ,GAAG,CAACI,GAAJ,CAAQC,oBAAQC,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AACAP,GAAG,CAACI,GAAJ,CAAQC,oBAAQG,IAAR,EAAR,E,CAGA;;AACAR,GAAG,CAACI,GAAJ,CAAQ,MAAR,EAAgBK,oBAAhB;eAEeT,G",
      "sourceRoot": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\",
      "sourcesContent": [
        "import express from \"express\";\r\nimport cors from \"cors\";\r\nimport productRoutes from \"./routes/products.routes\";\r\nimport morgan from \"morgan\";\r\n\r\nimport config from \"./config\";\r\n\r\nconst app = express();  // importar el modulo expres\r\n\r\n\r\n// settings\r\napp.set(\"port\", config.port);\r\n\r\n// Middlewares\r\napp.use(cors());\r\napp.use(morgan(\"dev\"));\r\napp.use(express.urlencoded({ extended: false }));\r\napp.use(express.json());\r\n\r\n\r\n// Routes\r\napp.use(\"/api\", productRoutes);\r\n\r\nexport default app;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1634888861958
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\zaitoft\\\\Documents\\\\GitHub\\\\EzTaskber\\\\Backend\\\\src\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\zaitoft\\\\Documents\\\\GitHub\\\\EzTaskber\\\\Backend\",\"filename\":\"C:\\\\Users\\\\zaitoft\\\\Documents\\\\GitHub\\\\EzTaskber\\\\Backend\\\\src\\\\routes\\\\products.routes.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\zaitoft\\\\Documents\\\\GitHub\\\\EzTaskber\\\\Backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.5": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend",
      "filename": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\routes\\products.routes.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\routes\\products.routes.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\routes\\products.routes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\routes\\",
        "sourceFileName": "products.routes.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _system = require(\"../controllers/system.controller\");\n\nvar router = (0, _express.Router)();\nrouter.post(\"/User/addUser\", _system.createNewUser);\nrouter.post(\"/User/Status\", _system.ChangeStateUser);\nrouter.post(\"/User/GetUser\", _system.GetUser);\nrouter.post(\"/Trabajador/addTrabajador\", _system.createNewTrabajador);\nrouter.post(\"/Trabajador/addRegister\", _system.CreateNewRegistrado);\nrouter.post(\"/Trabajador/addTrabajo\", _system.CreateNewTrabaja_en);\nrouter.post(\"/Trabajador/Status\", _system.ChangeStateTrabajador);\nrouter.post(\"/Trabajador/GetTrabajador\", _system.GetTrabajador);\nrouter.post(\"/Trabajador/GetTrabajadorLugarService\", _system.GetTrabajadorLugarService);\nrouter.post(\"/FeedBack/addFeedBack\", _system.CreateNewFeedBack);\nrouter.post(\"/FeedBack/GetFeedBack\", _system.GetFeedback);\nrouter.post(\"/Service/addService\", _system.CreateNewService);\nrouter.post(\"/Service/GetService\", _system.GetService);\nrouter.post(\"/Lugar/addLugar\", _system.CreateNewLugar);\nrouter.post(\"/Lugar/GetLugar\", _system.GetLugar);\nrouter.post(\"/Peticion/addPeticion\", _system.CreateNewPeticion);\nrouter.post(\"/Peticion/GetPeticion\", _system.GetPeticion);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2R1Y3RzLnJvdXRlcy5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJwb3N0IiwiY3JlYXRlTmV3VXNlciIsIkNoYW5nZVN0YXRlVXNlciIsIkdldFVzZXIiLCJjcmVhdGVOZXdUcmFiYWphZG9yIiwiQ3JlYXRlTmV3UmVnaXN0cmFkbyIsIkNyZWF0ZU5ld1RyYWJhamFfZW4iLCJDaGFuZ2VTdGF0ZVRyYWJhamFkb3IiLCJHZXRUcmFiYWphZG9yIiwiR2V0VHJhYmFqYWRvckx1Z2FyU2VydmljZSIsIkNyZWF0ZU5ld0ZlZWRCYWNrIiwiR2V0RmVlZGJhY2siLCJDcmVhdGVOZXdTZXJ2aWNlIiwiR2V0U2VydmljZSIsIkNyZWF0ZU5ld0x1Z2FyIiwiR2V0THVnYXIiLCJDcmVhdGVOZXdQZXRpY2lvbiIsIkdldFBldGljaW9uIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBRUE7O0FBRUEsSUFBTUEsTUFBTSxHQUFHLHNCQUFmO0FBRUFBLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZLGVBQVosRUFBNEJDLHFCQUE1QjtBQUNBRixNQUFNLENBQUNDLElBQVAsQ0FBWSxjQUFaLEVBQTRCRSx1QkFBNUI7QUFDQUgsTUFBTSxDQUFDQyxJQUFQLENBQVksZUFBWixFQUE0QkcsZUFBNUI7QUFFQUosTUFBTSxDQUFDQyxJQUFQLENBQVksMkJBQVosRUFBeUNJLDJCQUF6QztBQUNBTCxNQUFNLENBQUNDLElBQVAsQ0FBWSx5QkFBWixFQUF1Q0ssMkJBQXZDO0FBQ0FOLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZLHdCQUFaLEVBQXNDTSwyQkFBdEM7QUFDQVAsTUFBTSxDQUFDQyxJQUFQLENBQVksb0JBQVosRUFBa0NPLDZCQUFsQztBQUNBUixNQUFNLENBQUNDLElBQVAsQ0FBWSwyQkFBWixFQUF5Q1EscUJBQXpDO0FBQ0FULE1BQU0sQ0FBQ0MsSUFBUCxDQUFZLHVDQUFaLEVBQXFEUyxpQ0FBckQ7QUFFQVYsTUFBTSxDQUFDQyxJQUFQLENBQVksdUJBQVosRUFBcUNVLHlCQUFyQztBQUNBWCxNQUFNLENBQUNDLElBQVAsQ0FBWSx1QkFBWixFQUFxQ1csbUJBQXJDO0FBRUFaLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZLHFCQUFaLEVBQW1DWSx3QkFBbkM7QUFDQWIsTUFBTSxDQUFDQyxJQUFQLENBQVkscUJBQVosRUFBbUNhLGtCQUFuQztBQUVBZCxNQUFNLENBQUNDLElBQVAsQ0FBWSxpQkFBWixFQUErQmMsc0JBQS9CO0FBQ0FmLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZLGlCQUFaLEVBQStCZSxnQkFBL0I7QUFFQWhCLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZLHVCQUFaLEVBQXFDZ0IseUJBQXJDO0FBQ0FqQixNQUFNLENBQUNDLElBQVAsQ0FBWSx1QkFBWixFQUFxQ2lCLG1CQUFyQztlQUVlbEIsTSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHphaXRvZnRcXERvY3VtZW50c1xcR2l0SHViXFxFelRhc2tiZXJcXEJhY2tlbmRcXHNyY1xccm91dGVzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZXIgfSBmcm9tIFwiZXhwcmVzc1wiO1xyXG5cclxuaW1wb3J0IHtDaGFuZ2VTdGF0ZVRyYWJhamFkb3IsIENoYW5nZVN0YXRlVXNlciwgQ3JlYXRlTmV3RmVlZEJhY2ssIENyZWF0ZU5ld0x1Z2FyLENyZWF0ZU5ld1BldGljaW9uLENyZWF0ZU5ld1JlZ2lzdHJhZG8sQ3JlYXRlTmV3U2VydmljZSwgY3JlYXRlTmV3VHJhYmFqYWRvciwgQ3JlYXRlTmV3VHJhYmFqYV9lbiwgY3JlYXRlTmV3VXNlciwgR2V0RmVlZGJhY2ssIEdldEx1Z2FyLCBHZXRQZXRpY2lvbiwgR2V0U2VydmljZSwgR2V0VHJhYmFqYWRvciwgR2V0VHJhYmFqYWRvckx1Z2FyU2VydmljZSwgR2V0VXNlcn0gZnJvbSBcIi4uL2NvbnRyb2xsZXJzL3N5c3RlbS5jb250cm9sbGVyXCI7XHJcblxyXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKTtcclxuXHJcbnJvdXRlci5wb3N0KFwiL1VzZXIvYWRkVXNlclwiLGNyZWF0ZU5ld1VzZXIpO1xyXG5yb3V0ZXIucG9zdChcIi9Vc2VyL1N0YXR1c1wiLCBDaGFuZ2VTdGF0ZVVzZXIpO1xyXG5yb3V0ZXIucG9zdChcIi9Vc2VyL0dldFVzZXJcIixHZXRVc2VyKTtcclxuXHJcbnJvdXRlci5wb3N0KFwiL1RyYWJhamFkb3IvYWRkVHJhYmFqYWRvclwiLCBjcmVhdGVOZXdUcmFiYWphZG9yKTtcclxucm91dGVyLnBvc3QoXCIvVHJhYmFqYWRvci9hZGRSZWdpc3RlclwiLCBDcmVhdGVOZXdSZWdpc3RyYWRvKTtcclxucm91dGVyLnBvc3QoXCIvVHJhYmFqYWRvci9hZGRUcmFiYWpvXCIsIENyZWF0ZU5ld1RyYWJhamFfZW4pO1xyXG5yb3V0ZXIucG9zdChcIi9UcmFiYWphZG9yL1N0YXR1c1wiLCBDaGFuZ2VTdGF0ZVRyYWJhamFkb3IpO1xyXG5yb3V0ZXIucG9zdChcIi9UcmFiYWphZG9yL0dldFRyYWJhamFkb3JcIiwgR2V0VHJhYmFqYWRvcik7XHJcbnJvdXRlci5wb3N0KFwiL1RyYWJhamFkb3IvR2V0VHJhYmFqYWRvckx1Z2FyU2VydmljZVwiLCBHZXRUcmFiYWphZG9yTHVnYXJTZXJ2aWNlKTtcclxuXHJcbnJvdXRlci5wb3N0KFwiL0ZlZWRCYWNrL2FkZEZlZWRCYWNrXCIsIENyZWF0ZU5ld0ZlZWRCYWNrKTtcclxucm91dGVyLnBvc3QoXCIvRmVlZEJhY2svR2V0RmVlZEJhY2tcIiwgR2V0RmVlZGJhY2spO1xyXG5cclxucm91dGVyLnBvc3QoXCIvU2VydmljZS9hZGRTZXJ2aWNlXCIsIENyZWF0ZU5ld1NlcnZpY2UpO1xyXG5yb3V0ZXIucG9zdChcIi9TZXJ2aWNlL0dldFNlcnZpY2VcIiwgR2V0U2VydmljZSk7XHJcblxyXG5yb3V0ZXIucG9zdChcIi9MdWdhci9hZGRMdWdhclwiLCBDcmVhdGVOZXdMdWdhcik7XHJcbnJvdXRlci5wb3N0KFwiL0x1Z2FyL0dldEx1Z2FyXCIsIEdldEx1Z2FyKTtcclxuXHJcbnJvdXRlci5wb3N0KFwiL1BldGljaW9uL2FkZFBldGljaW9uXCIsIENyZWF0ZU5ld1BldGljaW9uKTtcclxucm91dGVyLnBvc3QoXCIvUGV0aWNpb24vR2V0UGV0aWNpb25cIiwgR2V0UGV0aWNpb24pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xyXG5cclxuICJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "products.routes.js"
      ],
      "names": [
        "router",
        "post",
        "createNewUser",
        "ChangeStateUser",
        "GetUser",
        "createNewTrabajador",
        "CreateNewRegistrado",
        "CreateNewTrabaja_en",
        "ChangeStateTrabajador",
        "GetTrabajador",
        "GetTrabajadorLugarService",
        "CreateNewFeedBack",
        "GetFeedback",
        "CreateNewService",
        "GetService",
        "CreateNewLugar",
        "GetLugar",
        "CreateNewPeticion",
        "GetPeticion"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA;;AAEA,IAAMA,MAAM,GAAG,sBAAf;AAEAA,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4BC,qBAA5B;AACAF,MAAM,CAACC,IAAP,CAAY,cAAZ,EAA4BE,uBAA5B;AACAH,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4BG,eAA5B;AAEAJ,MAAM,CAACC,IAAP,CAAY,2BAAZ,EAAyCI,2BAAzC;AACAL,MAAM,CAACC,IAAP,CAAY,yBAAZ,EAAuCK,2BAAvC;AACAN,MAAM,CAACC,IAAP,CAAY,wBAAZ,EAAsCM,2BAAtC;AACAP,MAAM,CAACC,IAAP,CAAY,oBAAZ,EAAkCO,6BAAlC;AACAR,MAAM,CAACC,IAAP,CAAY,2BAAZ,EAAyCQ,qBAAzC;AACAT,MAAM,CAACC,IAAP,CAAY,uCAAZ,EAAqDS,iCAArD;AAEAV,MAAM,CAACC,IAAP,CAAY,uBAAZ,EAAqCU,yBAArC;AACAX,MAAM,CAACC,IAAP,CAAY,uBAAZ,EAAqCW,mBAArC;AAEAZ,MAAM,CAACC,IAAP,CAAY,qBAAZ,EAAmCY,wBAAnC;AACAb,MAAM,CAACC,IAAP,CAAY,qBAAZ,EAAmCa,kBAAnC;AAEAd,MAAM,CAACC,IAAP,CAAY,iBAAZ,EAA+Bc,sBAA/B;AACAf,MAAM,CAACC,IAAP,CAAY,iBAAZ,EAA+Be,gBAA/B;AAEAhB,MAAM,CAACC,IAAP,CAAY,uBAAZ,EAAqCgB,yBAArC;AACAjB,MAAM,CAACC,IAAP,CAAY,uBAAZ,EAAqCiB,mBAArC;eAEelB,M",
      "sourceRoot": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\routes\\",
      "sourcesContent": [
        "import { Router } from \"express\";\r\n\r\nimport {ChangeStateTrabajador, ChangeStateUser, CreateNewFeedBack, CreateNewLugar,CreateNewPeticion,CreateNewRegistrado,CreateNewService, createNewTrabajador, CreateNewTrabaja_en, createNewUser, GetFeedback, GetLugar, GetPeticion, GetService, GetTrabajador, GetTrabajadorLugarService, GetUser} from \"../controllers/system.controller\";\r\n\r\nconst router = Router();\r\n\r\nrouter.post(\"/User/addUser\",createNewUser);\r\nrouter.post(\"/User/Status\", ChangeStateUser);\r\nrouter.post(\"/User/GetUser\",GetUser);\r\n\r\nrouter.post(\"/Trabajador/addTrabajador\", createNewTrabajador);\r\nrouter.post(\"/Trabajador/addRegister\", CreateNewRegistrado);\r\nrouter.post(\"/Trabajador/addTrabajo\", CreateNewTrabaja_en);\r\nrouter.post(\"/Trabajador/Status\", ChangeStateTrabajador);\r\nrouter.post(\"/Trabajador/GetTrabajador\", GetTrabajador);\r\nrouter.post(\"/Trabajador/GetTrabajadorLugarService\", GetTrabajadorLugarService);\r\n\r\nrouter.post(\"/FeedBack/addFeedBack\", CreateNewFeedBack);\r\nrouter.post(\"/FeedBack/GetFeedBack\", GetFeedback);\r\n\r\nrouter.post(\"/Service/addService\", CreateNewService);\r\nrouter.post(\"/Service/GetService\", GetService);\r\n\r\nrouter.post(\"/Lugar/addLugar\", CreateNewLugar);\r\nrouter.post(\"/Lugar/GetLugar\", GetLugar);\r\n\r\nrouter.post(\"/Peticion/addPeticion\", CreateNewPeticion);\r\nrouter.post(\"/Peticion/GetPeticion\", GetPeticion);\r\n\r\nexport default router;\r\n\r\n "
      ]
    },
    "sourceType": "script",
    "mtime": 1635203209605
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\zaitoft\\\\Documents\\\\GitHub\\\\EzTaskber\\\\Backend\\\\src\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\zaitoft\\\\Documents\\\\GitHub\\\\EzTaskber\\\\Backend\",\"filename\":\"C:\\\\Users\\\\zaitoft\\\\Documents\\\\GitHub\\\\EzTaskber\\\\Backend\\\\src\\\\controllers\\\\system.controller.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\zaitoft\\\\Documents\\\\GitHub\\\\EzTaskber\\\\Backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.5": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\controllers\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend",
      "filename": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\controllers\\system.controller.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\controllers\\system.controller.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\controllers\\system.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\controllers\\",
        "sourceFileName": "system.controller.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GetTrabajadorLugarService = exports.GetFeedback = exports.GetPeticion = exports.GetService = exports.GetLugar = exports.GetTrabajador = exports.GetUser = exports.ChangeStateTrabajador = exports.ChangeStateUser = exports.CreateNewPeticion = exports.CreateNewRegistrado = exports.CreateNewTrabaja_en = exports.CreateNewLugar = exports.CreateNewService = exports.CreateNewFeedBack = exports.createNewTrabajador = exports.createNewUser = void 0;\n\nvar _database = require(\"../database\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//-------------------------------------------------------------------------------------------------------------------------------------------\nvar regex = /^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\nvar regex_t = /^([0-9]+)$/; //------------------------------ agregar ------------------------------\n\nvar createNewUser = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var _req$body, nombre, telefono, email, contraseña, quantity, pool, result;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _req$body = req.body, nombre = _req$body.nombre, telefono = _req$body.telefono, email = _req$body.email, contraseña = _req$body.contraseña;\n            quantity = 20; //validacion\n\n            if (!(telefono == null || nombre == null || contraseña == null || email == null || !regex.test(email) || telefono.toString().length != 8 || contraseña.length < 5 || !regex_t.test(telefono))) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\", res.json({\n              status: 400,\n              msg: \"Bad Reques\"\n            }));\n\n          case 4:\n            _context.prev = 4;\n            _context.next = 7;\n            return (0, _database.getConnection)();\n\n          case 7:\n            pool = _context.sent;\n            _context.next = 10;\n            return pool.request().input(\"email\", _database.sql.VarChar, email).input(\"telefono\", _database.sql.Int, telefono).input(\"quantity\", _database.sql.Int, quantity).query(\"Select telefono From usuario Where email = @email or telefono = @telefono\");\n\n          case 10:\n            result = _context.sent;\n\n            if (!(result.recordset.length != 0)) {\n              _context.next = 13;\n              break;\n            }\n\n            return _context.abrupt(\"return\", res.json({\n              status: 400,\n              msg: \"teléfono o email ya existente\"\n            }));\n\n          case 13:\n            _context.next = 15;\n            return pool.request().input(\"nombre\", _database.sql.VarChar, nombre).input(\"telefono\", _database.sql.Int, telefono).input(\"email\", _database.sql.VarChar, email).input(\"contraseña\", _database.sql.VarChar, contraseña).input(\"quantity\", _database.sql.Int, quantity).query(\" INSERT INTO usuario (telefono,nombre,email,contraseña) VALUES (@telefono,@nombre,@email,@contraseña); \");\n\n          case 15:\n            return _context.abrupt(\"return\", res.json({\n              status: 1,\n              msg: \"usuario insertado satisfactoriamente\"\n            }));\n\n          case 18:\n            _context.prev = 18;\n            _context.t0 = _context[\"catch\"](4);\n            res.status(500);\n            res.send(_context.t0.message);\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[4, 18]]);\n  }));\n\n  return function createNewUser(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.createNewUser = createNewUser;\n\nvar createNewTrabajador = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var _req$body2, nombre, telefono, email, contraseña, dpi, cv, antecedentes, quantity, pool, result, result2;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _req$body2 = req.body, nombre = _req$body2.nombre, telefono = _req$body2.telefono, email = _req$body2.email, contraseña = _req$body2.contraseña, dpi = _req$body2.dpi, cv = _req$body2.cv, antecedentes = _req$body2.antecedentes;\n            console.log(req.body);\n            console.log(contraseña);\n            quantity = 20; //validacion\n\n            if (!(telefono == null || nombre == null || contraseña == null || email == null || dpi == null || cv == null || antecedentes == null || !regex.test(email) || telefono.toString().length != 8 || contraseña.length < 5 || !regex_t.test(telefono))) {\n              _context2.next = 6;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", res.json({\n              status: 400,\n              msg: \"Bad Reques\"\n            }));\n\n          case 6:\n            _context2.prev = 6;\n            _context2.next = 9;\n            return (0, _database.getConnection)();\n\n          case 9:\n            pool = _context2.sent;\n            _context2.next = 12;\n            return pool.request().input(\"email\", _database.sql.VarChar, email).input(\"telefono\", _database.sql.Int, telefono).input(\"quantity\", _database.sql.Int, quantity).query(\"Select telefono From trabajador Where email = @email or telefono = @telefono \");\n\n          case 12:\n            result = _context2.sent;\n\n            if (!(result.recordset.length != 0)) {\n              _context2.next = 15;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", res.json({\n              status: 400,\n              msg: \"teléfono o email  ya existente\"\n            }));\n\n          case 15:\n            quantity = 100;\n            _context2.next = 18;\n            return pool.request().input(\"nombre\", _database.sql.VarChar, nombre).input(\"telefono\", _database.sql.Int, telefono).input(\"email\", _database.sql.VarChar, email).input(\"contraseña\", _database.sql.VarChar, contraseña).input(\"dpi\", _database.sql.VarChar, dpi).input(\"cv\", _database.sql.VarChar, cv).input(\"antecedentes\", _database.sql.VarChar, antecedentes).input(\"quantity\", _database.sql.Int, quantity).query(\"INSERT INTO trabajador (telefono,nombre,email,contraseña, dpi, cv, antecedentes) VALUES (@telefono,@nombre,@email,@contraseña, @dpi, @cv, @antecedentes);\");\n\n          case 18:\n            result2 = _context2.sent;\n            return _context2.abrupt(\"return\", res.json({\n              status: 1,\n              msg: \"trabajador insertado satisfactoriamente\"\n            }));\n\n          case 22:\n            _context2.prev = 22;\n            _context2.t0 = _context2[\"catch\"](6);\n            res.status(500);\n            res.send(_context2.t0.message);\n\n          case 26:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[6, 22]]);\n  }));\n\n  return function createNewTrabajador(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexports.createNewTrabajador = createNewTrabajador;\n\nvar CreateNewFeedBack = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var _req$body3, id_p, id_u, id_t, califiacion, comentarios, quantity, pool;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _req$body3 = req.body, id_p = _req$body3.id_p, id_u = _req$body3.id_u, id_t = _req$body3.id_t, califiacion = _req$body3.califiacion, comentarios = _req$body3.comentarios;\n            quantity = 20;\n\n            if (!(id_p == null || id_u == null || id_t == null || califiacion == null || comentarios == null || !regex_t.test(id_p) || !regex_t.test(id_u) || !regex_t.test(id_t) || !regex_t.test(califiacion))) {\n              _context3.next = 4;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", res.json({\n              status: 400,\n              msg: \"Bad Reques\"\n            }));\n\n          case 4:\n            _context3.prev = 4;\n            _context3.next = 7;\n            return (0, _database.getConnection)();\n\n          case 7:\n            pool = _context3.sent;\n            _context3.next = 10;\n            return pool.request().input(\"id_p\", _database.sql.Int, id_p).input(\"id_u\", _database.sql.Int, id_u).input(\"id_t\", _database.sql.Int, id_t).input(\"califiacion\", _database.sql.Int, califiacion).input(\"comentarios\", _database.sql.VarChar, comentarios).input(\"quantity\", _database.sql.Int, quantity).query(\"INSERT INTO feedback (id_p, id_u, id_t, califiacion, comentarios) VALUES (@id_p, @id_u, @id_t, @califiacion, @comentarios) \");\n\n          case 10:\n            return _context3.abrupt(\"return\", res.json({\n              status: 1,\n              msg: \"Insertado satisfactoriamente\"\n            }));\n\n          case 13:\n            _context3.prev = 13;\n            _context3.t0 = _context3[\"catch\"](4);\n            res.status(500);\n            res.send(_context3.t0.message);\n\n          case 17:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[4, 13]]);\n  }));\n\n  return function CreateNewFeedBack(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexports.CreateNewFeedBack = CreateNewFeedBack;\n\nvar CreateNewService = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var _req$body4, servicio, descripcion, quantity, pool, result;\n\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _req$body4 = req.body, servicio = _req$body4.servicio, descripcion = _req$body4.descripcion;\n            quantity = 20;\n\n            if (!(servicio == null || descripcion == null)) {\n              _context4.next = 4;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", res.json({\n              status: 400,\n              msg: \"Bad Reques\"\n            }));\n\n          case 4:\n            _context4.prev = 4;\n            _context4.next = 7;\n            return (0, _database.getConnection)();\n\n          case 7:\n            pool = _context4.sent;\n            _context4.next = 10;\n            return pool.request().input(\"servicio\", _database.sql.VarChar, servicio).input(\"descripcion\", _database.sql.VarChar, descripcion).input(\"quantity\", _database.sql.Int, quantity).query(\"Insert INTO servicios (nombre ,descripcion) VALUES (@servicio, @descripcion);\");\n\n          case 10:\n            result = _context4.sent;\n            return _context4.abrupt(\"return\", res.json({\n              msg: \"Insertado correctamente\",\n              result: result\n            }));\n\n          case 14:\n            _context4.prev = 14;\n            _context4.t0 = _context4[\"catch\"](4);\n            res.status(500);\n            res.send(_context4.t0.message);\n\n          case 18:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[4, 14]]);\n  }));\n\n  return function CreateNewService(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nexports.CreateNewService = CreateNewService;\n\nvar CreateNewLugar = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var zona, quantity, pool, result;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            zona = req.body.zona;\n            quantity = 20;\n\n            if (!(zona == null || !regex_t.test(zona))) {\n              _context5.next = 4;\n              break;\n            }\n\n            return _context5.abrupt(\"return\", res.json({\n              status: 400,\n              msg: \"Bad Reques\"\n            }));\n\n          case 4:\n            _context5.prev = 4;\n            _context5.next = 7;\n            return (0, _database.getConnection)();\n\n          case 7:\n            pool = _context5.sent;\n            _context5.next = 10;\n            return pool.request().input(\"zona\", _database.sql.Int, zona).input(\"quantity\", _database.sql.Int, quantity).query(\"INSERT INTO lugar (zona) VALUES (@zona);\");\n\n          case 10:\n            result = _context5.sent;\n            return _context5.abrupt(\"return\", res.json({\n              status: 1,\n              msg: \"Ingresado correctamente\"\n            }));\n\n          case 14:\n            _context5.prev = 14;\n            _context5.t0 = _context5[\"catch\"](4);\n            res.status(500);\n            res.send(_context5.t0.message);\n\n          case 18:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[4, 14]]);\n  }));\n\n  return function CreateNewLugar(_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nexports.CreateNewLugar = CreateNewLugar;\n\nvar CreateNewTrabaja_en = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n    var _req$body5, id_l, id_t, quantity, pool;\n\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _req$body5 = req.body, id_l = _req$body5.id_l, id_t = _req$body5.id_t;\n            quantity = 20;\n\n            if (!(id_l == null || id_t == null || !regex_t.test(id_l) || !regex_t.test(id_t))) {\n              _context6.next = 4;\n              break;\n            }\n\n            return _context6.abrupt(\"return\", res.json({\n              status: 400,\n              msg: \"Bad Reques\"\n            }));\n\n          case 4:\n            _context6.prev = 4;\n            _context6.next = 7;\n            return (0, _database.getConnection)();\n\n          case 7:\n            pool = _context6.sent;\n            _context6.next = 10;\n            return pool.request().input(\"id_l\", _database.sql.Int, id_l).input(\"id_t\", _database.sql.Int, id_t).input(\"quantity\", _database.sql.Int, quantity).query(\"INSERT INTO trabajador_en (id_t, id_l) VALUES (@id_t, @id_l);\");\n\n          case 10:\n            return _context6.abrupt(\"return\", res.json({\n              status: 1,\n              msg: \"Ingresado correctamente\"\n            }));\n\n          case 13:\n            _context6.prev = 13;\n            _context6.t0 = _context6[\"catch\"](4);\n            res.status(500);\n            res.send(_context6.t0.message);\n\n          case 17:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[4, 13]]);\n  }));\n\n  return function CreateNewTrabaja_en(_x11, _x12) {\n    return _ref6.apply(this, arguments);\n  };\n}();\n\nexports.CreateNewTrabaja_en = CreateNewTrabaja_en;\n\nvar CreateNewRegistrado = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res) {\n    var _req$body6, id_t, id_s, quantity, pool;\n\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _req$body6 = req.body, id_t = _req$body6.id_t, id_s = _req$body6.id_s;\n            quantity = 20;\n\n            if (!(id_t == null || id_s == null || !regex_t.test(id_t) || !regex_t.test(id_s))) {\n              _context7.next = 4;\n              break;\n            }\n\n            return _context7.abrupt(\"return\", res.json({\n              status: 400,\n              msg: \"Bad Reques\"\n            }));\n\n          case 4:\n            _context7.prev = 4;\n            _context7.next = 7;\n            return (0, _database.getConnection)();\n\n          case 7:\n            pool = _context7.sent;\n            _context7.next = 10;\n            return pool.request().input(\"id_t\", _database.sql.Int, id_t).input(\"id_s\", _database.sql.Int, id_s).input(\"quantity\", _database.sql.Int, quantity).query(\" INSERT INTO registrados (id_t, id_s) VALUES (@id_t, @id_s);\");\n\n          case 10:\n            return _context7.abrupt(\"return\", res.json({\n              status: 1,\n              msg: \"Insertado Satisfactoriamente\"\n            }));\n\n          case 13:\n            _context7.prev = 13;\n            _context7.t0 = _context7[\"catch\"](4);\n            res.status(500);\n            res.send(_context7.t0.message);\n\n          case 17:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[4, 13]]);\n  }));\n\n  return function CreateNewRegistrado(_x13, _x14) {\n    return _ref7.apply(this, arguments);\n  };\n}();\n\nexports.CreateNewRegistrado = CreateNewRegistrado;\n\nvar CreateNewPeticion = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(req, res) {\n    var _req$body7, id_u, id_t, id_s, nombre, descripcion, lugar, telefono_u, quantity, pool;\n\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _req$body7 = req.body, id_u = _req$body7.id_u, id_t = _req$body7.id_t, id_s = _req$body7.id_s, nombre = _req$body7.nombre, descripcion = _req$body7.descripcion, lugar = _req$body7.lugar, telefono_u = _req$body7.telefono_u;\n            quantity = 20;\n            console.log(req.body);\n            console.log(telefono_u.toString().length);\n\n            if (!(id_u == null || id_t == null || id_s == null || nombre == null || descripcion == null || lugar == null || telefono_u == null || !regex_t.test(id_u) || !regex_t.test(id_t) || !regex_t.test(id_s) || !regex_t.test(telefono_u) || telefono_u.toString().length != 8)) {\n              _context8.next = 6;\n              break;\n            }\n\n            return _context8.abrupt(\"return\", res.json({\n              status: 400,\n              msg: \"Bad Reques\"\n            }));\n\n          case 6:\n            _context8.prev = 6;\n            _context8.next = 9;\n            return (0, _database.getConnection)();\n\n          case 9:\n            pool = _context8.sent;\n            _context8.next = 12;\n            return pool.request().input(\"id_u\", _database.sql.Int, id_u).input(\"id_t\", _database.sql.Int, id_t).input(\"id_s\", _database.sql.Int, id_s).input(\"nombre\", _database.sql.VarChar, nombre).input(\"descripcion\", _database.sql.VarChar, descripcion).input(\"lugar\", _database.sql.VarChar, lugar).input(\"telefono_u\", _database.sql.Int, telefono_u).input(\"quantity\", _database.sql.Int, quantity).query(\"INSERT INTO peticion (id_u ,id_t ,id_s ,nombre ,descripcion ,lugar ,telefono_u,estado_t,estado_u  ) VALUES (@id_u ,@id_t ,@id_s ,@nombre ,@descripcion ,@lugar ,@telefono_u ,'P','P') \");\n\n          case 12:\n            return _context8.abrupt(\"return\", res.json({\n              status: 1,\n              msg: \"Insertado Satisfactoriamente\"\n            }));\n\n          case 15:\n            _context8.prev = 15;\n            _context8.t0 = _context8[\"catch\"](6);\n            res.status(500);\n            res.send(_context8.t0.message);\n\n          case 19:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, null, [[6, 15]]);\n  }));\n\n  return function CreateNewPeticion(_x15, _x16) {\n    return _ref8.apply(this, arguments);\n  };\n}(); //------------------------------ eliminar ------------------------------\n//------------------------------ editar ------------------------------\n\n\nexports.CreateNewPeticion = CreateNewPeticion;\n\nvar ChangeStateUser = /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(req, res) {\n    var _req$body8, id_p, estado_u, quantity, estado, pool, exist;\n\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _req$body8 = req.body, id_p = _req$body8.id_p, estado_u = _req$body8.estado_u;\n            quantity = 30;\n\n            if (!(id_p == null || estado_u == null || estado_u.toString().substring(0, 1) != 'P' && estado_u.toString().substring(0, 1) != 'F' && estado_u.toString().substring(0, 1) != 'C')) {\n              _context9.next = 4;\n              break;\n            }\n\n            return _context9.abrupt(\"return\", res.json({\n              status: 400,\n              msg: \"Bad Reques\"\n            }));\n\n          case 4:\n            _context9.prev = 4;\n            estado = estado_u.toString().substring(0, 1);\n            _context9.next = 8;\n            return (0, _database.getConnection)();\n\n          case 8:\n            pool = _context9.sent;\n            _context9.next = 11;\n            return pool.request().input(\"id_p\", _database.sql.Int, id_p).input(\"quantity\", _database.sql.Int, quantity).query(\"Select id_p From peticion where id_p = @id_p\");\n\n          case 11:\n            exist = _context9.sent;\n\n            if (!(exist.recordset.length == 0)) {\n              _context9.next = 14;\n              break;\n            }\n\n            return _context9.abrupt(\"return\", res.json({\n              status: 400,\n              msg: \"No existe la petición\"\n            }));\n\n          case 14:\n            _context9.next = 16;\n            return pool.request().input(\"id_p\", _database.sql.Int, id_p).input(\"estado_u\", _database.sql.VarChar, estado).input(\"quantity\", _database.sql.Int, quantity).query(\"UPDATE peticion SET estado_u = @estado_u WHERE id_p = @id_p\");\n\n          case 16:\n            return _context9.abrupt(\"return\", res.json({\n              status: 1,\n              msg: \"Fue actualizado correctamente\"\n            }));\n\n          case 19:\n            _context9.prev = 19;\n            _context9.t0 = _context9[\"catch\"](4);\n            res.status(500);\n            res.send(_context9.t0.message);\n\n          case 23:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9, null, [[4, 19]]);\n  }));\n\n  return function ChangeStateUser(_x17, _x18) {\n    return _ref9.apply(this, arguments);\n  };\n}();\n\nexports.ChangeStateUser = ChangeStateUser;\n\nvar ChangeStateTrabajador = /*#__PURE__*/function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(req, res) {\n    var _req$body9, id_p, estado_t, quantity, pool, exist;\n\n    return regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _req$body9 = req.body, id_p = _req$body9.id_p, estado_t = _req$body9.estado_t;\n            quantity = 30;\n\n            if (!(id_p == null || estado_t == null)) {\n              _context10.next = 4;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", res.json({\n              status: 400,\n              msg: \"Bad Reques\"\n            }));\n\n          case 4:\n            _context10.prev = 4;\n            _context10.next = 7;\n            return (0, _database.getConnection)();\n\n          case 7:\n            pool = _context10.sent;\n            _context10.next = 10;\n            return pool.request().input(\"id_p\", _database.sql.Int, id_p).input(\"quantity\", _database.sql.Int, quantity).query(\"Select id_p From peticion where id_p = @id_p\");\n\n          case 10:\n            exist = _context10.sent;\n\n            if (!(exist.recordset.length == 0)) {\n              _context10.next = 13;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", res.json({\n              status: 400,\n              msg: \"No existe la petición\"\n            }));\n\n          case 13:\n            _context10.next = 15;\n            return pool.request().input(\"id_p\", _database.sql.Int, id_p).input(\"estado_t\", _database.sql.VarChar, estado_t).input(\"quantity\", _database.sql.Int, quantity).query(\"UPDATE peticion SET estado_t = @estado_t WHERE id_p = @id_p\");\n\n          case 15:\n            return _context10.abrupt(\"return\", res.json({\n              status: 1,\n              msg: \"Fue actualizado correctamente\"\n            }));\n\n          case 18:\n            _context10.prev = 18;\n            _context10.t0 = _context10[\"catch\"](4);\n            res.status(500);\n            res.send(_context10.t0.message);\n\n          case 22:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10, null, [[4, 18]]);\n  }));\n\n  return function ChangeStateTrabajador(_x19, _x20) {\n    return _ref10.apply(this, arguments);\n  };\n}(); //------------------------------ buscar ------------------------------\n\n\nexports.ChangeStateTrabajador = ChangeStateTrabajador;\n\nvar GetUser = /*#__PURE__*/function () {\n  var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(req, res) {\n    var _req$body10, email, contraseña, quantity, pool, result;\n\n    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _req$body10 = req.body, email = _req$body10.email, contraseña = _req$body10.contraseña;\n            quantity = 20; //validacion\n\n            if (!(contraseña == null || email == null || !regex.test(email) || contraseña.length < 5)) {\n              _context11.next = 4;\n              break;\n            }\n\n            return _context11.abrupt(\"return\", res.json({\n              status: 400,\n              msg: \"Bad Reques\"\n            }));\n\n          case 4:\n            _context11.prev = 4;\n            _context11.next = 7;\n            return (0, _database.getConnection)();\n\n          case 7:\n            pool = _context11.sent;\n            _context11.next = 10;\n            return pool.request().input(\"email\", _database.sql.VarChar, email).input(\"contraseña\", _database.sql.VarChar, contraseña).input(\"quantity\", _database.sql.Int, quantity).query(\"Select * From usuario Where email = @email and contraseña = @contraseña \");\n\n          case 10:\n            result = _context11.sent;\n\n            if (!(result.recordset.length == 0)) {\n              _context11.next = 13;\n              break;\n            }\n\n            return _context11.abrupt(\"return\", res.json({\n              status: 400,\n              msg: \"error en el ingreso de datos\"\n            }));\n\n          case 13:\n            return _context11.abrupt(\"return\", res.json({\n              status: 1,\n              msg: \"bienvenido \",\n              result: result.recordset\n            }));\n\n          case 16:\n            _context11.prev = 16;\n            _context11.t0 = _context11[\"catch\"](4);\n            res.status(500);\n            res.send(_context11.t0.message);\n\n          case 20:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11, null, [[4, 16]]);\n  }));\n\n  return function GetUser(_x21, _x22) {\n    return _ref11.apply(this, arguments);\n  };\n}();\n\nexports.GetUser = GetUser;\n\nvar GetTrabajador = /*#__PURE__*/function () {\n  var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(req, res) {\n    var _req$body11, email, contraseña, quantity, pool, result;\n\n    return regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            _req$body11 = req.body, email = _req$body11.email, contraseña = _req$body11.contraseña;\n            quantity = 20; //validacion\n\n            if (!(contraseña == null || email == null || !regex.test(email) || contraseña.length < 5)) {\n              _context12.next = 4;\n              break;\n            }\n\n            return _context12.abrupt(\"return\", res.json({\n              status: 400,\n              msg: \"Bad Reques\"\n            }));\n\n          case 4:\n            _context12.prev = 4;\n            _context12.next = 7;\n            return (0, _database.getConnection)();\n\n          case 7:\n            pool = _context12.sent;\n            _context12.next = 10;\n            return pool.request().input(\"email\", _database.sql.VarChar, email).input(\"contraseña\", _database.sql.VarChar, contraseña).input(\"quantity\", _database.sql.Int, quantity).query(\"Select * From trabajador Where email = @email and contraseña = @contraseña \");\n\n          case 10:\n            result = _context12.sent;\n\n            if (!(result.recordset.length == 0)) {\n              _context12.next = 13;\n              break;\n            }\n\n            return _context12.abrupt(\"return\", res.json({\n              status: 400,\n              msg: \"error en el ingreso de datos\"\n            }));\n\n          case 13:\n            return _context12.abrupt(\"return\", res.json({\n              status: 1,\n              msg: \"bienvenido \",\n              result: result.recordset\n            }));\n\n          case 16:\n            _context12.prev = 16;\n            _context12.t0 = _context12[\"catch\"](4);\n            res.status(500);\n            res.send(_context12.t0.message);\n\n          case 20:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12, null, [[4, 16]]);\n  }));\n\n  return function GetTrabajador(_x23, _x24) {\n    return _ref12.apply(this, arguments);\n  };\n}();\n\nexports.GetTrabajador = GetTrabajador;\n\nvar GetLugar = /*#__PURE__*/function () {\n  var _ref13 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(req, res) {\n    var id_t, quantity, pool, result;\n    return regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            id_t = req.body.id_t;\n            quantity = 30;\n\n            if (!(id_t == null || !regex_t.test(id_t))) {\n              _context13.next = 4;\n              break;\n            }\n\n            return _context13.abrupt(\"return\", res.json({\n              status: 400,\n              msg: \"Bad Reques\"\n            }));\n\n          case 4:\n            _context13.prev = 4;\n            _context13.next = 7;\n            return (0, _database.getConnection)();\n\n          case 7:\n            pool = _context13.sent;\n            _context13.next = 10;\n            return pool.request().input(\"id_t\", _database.sql.Int, id_t).input(\"quantity\", _database.sql.Int, quantity).query(\"Select id_t , zona From trabajador_en t ,lugar l WHERE t.id_t = @id_t AND t.id_l = l.id_l\");\n\n          case 10:\n            result = _context13.sent;\n            return _context13.abrupt(\"return\", res.json({\n              status: 1,\n              msg: \"zonas\",\n              result: result.recordset\n            }));\n\n          case 14:\n            _context13.prev = 14;\n            _context13.t0 = _context13[\"catch\"](4);\n            res.status(500);\n            res.send(_context13.t0.message);\n\n          case 18:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13, null, [[4, 14]]);\n  }));\n\n  return function GetLugar(_x25, _x26) {\n    return _ref13.apply(this, arguments);\n  };\n}();\n\nexports.GetLugar = GetLugar;\n\nvar GetService = /*#__PURE__*/function () {\n  var _ref14 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(req, res) {\n    var id_t, quantity, pool, result;\n    return regeneratorRuntime.wrap(function _callee14$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            id_t = req.body.id_t;\n            quantity = 30;\n\n            if (!(id_t == null || !regex_t.test(id_t))) {\n              _context14.next = 4;\n              break;\n            }\n\n            return _context14.abrupt(\"return\", res.json({\n              status: 400,\n              msg: \"Bad Reques\"\n            }));\n\n          case 4:\n            _context14.prev = 4;\n            _context14.next = 7;\n            return (0, _database.getConnection)();\n\n          case 7:\n            pool = _context14.sent;\n            _context14.next = 10;\n            return pool.request().input(\"id_t\", _database.sql.Int, id_t).input(\"quantity\", _database.sql.Int, quantity).query(\"Select id_t, nombre, descripcion From registrados r ,servicios s WHERE r.id_t = @id_t AND s.id_s = r.id_s\");\n\n          case 10:\n            result = _context14.sent;\n            return _context14.abrupt(\"return\", res.json({\n              status: 1,\n              msg: \"servicios\",\n              result: result.recordset\n            }));\n\n          case 14:\n            _context14.prev = 14;\n            _context14.t0 = _context14[\"catch\"](4);\n            res.status(500);\n            res.send(_context14.t0.message);\n\n          case 18:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, _callee14, null, [[4, 14]]);\n  }));\n\n  return function GetService(_x27, _x28) {\n    return _ref14.apply(this, arguments);\n  };\n}();\n\nexports.GetService = GetService;\n\nvar GetPeticion = /*#__PURE__*/function () {\n  var _ref15 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(req, res) {\n    var _req$body12, id_t, id_u, quantity, pool, result;\n\n    return regeneratorRuntime.wrap(function _callee15$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            _req$body12 = req.body, id_t = _req$body12.id_t, id_u = _req$body12.id_u;\n            quantity = 100;\n\n            if (!(id_t == null && id_u == null || !regex_t.test(id_t) && !regex_t.test(id_u))) {\n              _context15.next = 4;\n              break;\n            }\n\n            return _context15.abrupt(\"return\", res.json({\n              status: 400,\n              msg: \"Bad Reques\"\n            }));\n\n          case 4:\n            _context15.prev = 4;\n            _context15.next = 7;\n            return (0, _database.getConnection)();\n\n          case 7:\n            pool = _context15.sent;\n\n            if (!(id_t != null && id_t != 0)) {\n              _context15.next = 14;\n              break;\n            }\n\n            _context15.next = 11;\n            return pool.request().input(\"id_t\", _database.sql.Int, id_t).input(\"quantity\", _database.sql.Int, quantity).query(\"Select p.id_p , t.id_t, p.nombre Pnombre, p.descripcion, p.lugar , p.telefono_u, p.estado_t , p.estado_u , t.nombre Tnombre , u.nombre Unombre  from peticion p, usuario u , trabajador t,servicios s where p.id_t = @id_t and  u.id_u = p.id_u and  t.id_t = p.id_t and  p.id_s = s.id_s\");\n\n          case 11:\n            result = _context15.sent;\n            _context15.next = 17;\n            break;\n\n          case 14:\n            _context15.next = 16;\n            return pool.request().input(\"id_u\", _database.sql.Int, id_u).input(\"quantity\", _database.sql.Int, quantity).query(\"Select p.id_p , t.id_t, p.nombre Pnombre, p.descripcion, p.lugar , p.telefono_u, p.estado_t , p.estado_u , t.nombre Tnombre , u.nombre Unombre  from peticion p, usuario u , trabajador t,servicios s where p.id_u = @id_u and  u.id_u = p.id_u and  t.id_t = p.id_t and  p.id_s = s.id_s\");\n\n          case 16:\n            result = _context15.sent;\n\n          case 17:\n            return _context15.abrupt(\"return\", res.json({\n              status: 1,\n              msg: \"Peticiones\",\n              result: result.recordset\n            }));\n\n          case 20:\n            _context15.prev = 20;\n            _context15.t0 = _context15[\"catch\"](4);\n            res.status(500);\n            res.send(_context15.t0.message);\n\n          case 24:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, _callee15, null, [[4, 20]]);\n  }));\n\n  return function GetPeticion(_x29, _x30) {\n    return _ref15.apply(this, arguments);\n  };\n}();\n\nexports.GetPeticion = GetPeticion;\n\nvar GetFeedback = /*#__PURE__*/function () {\n  var _ref16 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(req, res) {\n    var _req$body13, id_t, id_u, quantity, pool, result;\n\n    return regeneratorRuntime.wrap(function _callee16$(_context16) {\n      while (1) {\n        switch (_context16.prev = _context16.next) {\n          case 0:\n            _req$body13 = req.body, id_t = _req$body13.id_t, id_u = _req$body13.id_u;\n            quantity = 100;\n\n            if (!(id_t == null && id_u == null || !regex_t.test(id_t) && !regex_t.test(id_u))) {\n              _context16.next = 4;\n              break;\n            }\n\n            return _context16.abrupt(\"return\", res.json({\n              status: 400,\n              msg: \"Bad Reques\"\n            }));\n\n          case 4:\n            _context16.prev = 4;\n            _context16.next = 7;\n            return (0, _database.getConnection)();\n\n          case 7:\n            pool = _context16.sent;\n\n            if (!(id_t != null && id_t != 0)) {\n              _context16.next = 14;\n              break;\n            }\n\n            _context16.next = 11;\n            return pool.request().input(\"id_t\", _database.sql.Int, id_t).input(\"quantity\", _database.sql.Int, quantity).query(\"Select f.id_f, p.id_p , f.califiacion , f.comentarios , p.nombre Pnombre, t.nombre  Tnombre, u.nombre Unombre from feedback f, usuario u , trabajador t, peticion p where f.id_t = @id_t and u.id_u = f.id_u and   t.id_t = f.id_t  and  p.id_p = f.id_p\");\n\n          case 11:\n            result = _context16.sent;\n            _context16.next = 17;\n            break;\n\n          case 14:\n            _context16.next = 16;\n            return pool.request().input(\"id_u\", _database.sql.Int, id_u).input(\"quantity\", _database.sql.Int, quantity).query(\"Select f.id_f, p.id_p , f.califiacion , f.comentarios , p.nombre Pnombre, t.nombre  Tnombre, u.nombre Unombre from feedback f, usuario u , trabajador t, peticion p where f.id_u = @id_u and u.id_u = f.id_u and   t.id_t = f.id_t  and  p.id_p = f.id_p\");\n\n          case 16:\n            result = _context16.sent;\n\n          case 17:\n            return _context16.abrupt(\"return\", res.json({\n              status: 1,\n              msg: \"Feedback\",\n              result: result.recordset\n            }));\n\n          case 20:\n            _context16.prev = 20;\n            _context16.t0 = _context16[\"catch\"](4);\n            res.status(500);\n            res.send(_context16.t0.message);\n\n          case 24:\n          case \"end\":\n            return _context16.stop();\n        }\n      }\n    }, _callee16, null, [[4, 20]]);\n  }));\n\n  return function GetFeedback(_x31, _x32) {\n    return _ref16.apply(this, arguments);\n  };\n}();\n\nexports.GetFeedback = GetFeedback;\n\nvar GetTrabajadorLugarService = /*#__PURE__*/function () {\n  var _ref17 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(req, res) {\n    var _req$body14, id_l, id_s, quantity, pool, result;\n\n    return regeneratorRuntime.wrap(function _callee17$(_context17) {\n      while (1) {\n        switch (_context17.prev = _context17.next) {\n          case 0:\n            _req$body14 = req.body, id_l = _req$body14.id_l, id_s = _req$body14.id_s;\n            quantity = 30;\n\n            if (!(id_l == null || id_s == null || !regex_t.test(id_l) || !regex_t.test(id_s))) {\n              _context17.next = 4;\n              break;\n            }\n\n            return _context17.abrupt(\"return\", res.json({\n              status: 400,\n              msg: \"Bad Reques\"\n            }));\n\n          case 4:\n            _context17.prev = 4;\n            _context17.next = 7;\n            return (0, _database.getConnection)();\n\n          case 7:\n            pool = _context17.sent;\n            _context17.next = 10;\n            return pool.request().input(\"id_l\", _database.sql.Int, id_l).input(\"id_S\", _database.sql.Int, id_s).input(\"quantity\", _database.sql.Int, quantity).query(\"Select t.id_t, t.telefono, t.nombre, t.email From trabajador t, lugar l, servicios s, trabajador_en te, registrados r where r.id_s = @id_s and te.id_l = @id_l and l.id_l = te.id_l and s.id_s = r.id_s and t.id_t = te.id_t and t.id_t = r.id_t;\");\n\n          case 10:\n            result = _context17.sent;\n            return _context17.abrupt(\"return\", res.json({\n              status: 1,\n              msg: \"Trabajadores\",\n              result: result.recordset\n            }));\n\n          case 14:\n            _context17.prev = 14;\n            _context17.t0 = _context17[\"catch\"](4);\n            res.status(500);\n            res.send(_context17.t0.message);\n\n          case 18:\n          case \"end\":\n            return _context17.stop();\n        }\n      }\n    }, _callee17, null, [[4, 14]]);\n  }));\n\n  return function GetTrabajadorLugarService(_x33, _x34) {\n    return _ref17.apply(this, arguments);\n  };\n}();\n\nexports.GetTrabajadorLugarService = GetTrabajadorLugarService;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "system.controller.js"
      ],
      "names": [
        "regex",
        "regex_t",
        "createNewUser",
        "req",
        "res",
        "body",
        "nombre",
        "telefono",
        "email",
        "contraseña",
        "quantity",
        "test",
        "toString",
        "length",
        "json",
        "status",
        "msg",
        "pool",
        "request",
        "input",
        "sql",
        "VarChar",
        "Int",
        "query",
        "result",
        "recordset",
        "send",
        "message",
        "createNewTrabajador",
        "dpi",
        "cv",
        "antecedentes",
        "console",
        "log",
        "result2",
        "CreateNewFeedBack",
        "id_p",
        "id_u",
        "id_t",
        "califiacion",
        "comentarios",
        "CreateNewService",
        "servicio",
        "descripcion",
        "CreateNewLugar",
        "zona",
        "CreateNewTrabaja_en",
        "id_l",
        "CreateNewRegistrado",
        "id_s",
        "CreateNewPeticion",
        "lugar",
        "telefono_u",
        "ChangeStateUser",
        "estado_u",
        "substring",
        "estado",
        "exist",
        "ChangeStateTrabajador",
        "estado_t",
        "GetUser",
        "GetTrabajador",
        "GetLugar",
        "GetService",
        "GetPeticion",
        "GetFeedback",
        "GetTrabajadorLugarService"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\controllers\\",
      "sourcesContent": [
        "import { getConnection, sql } from \"../database\";\r\n\r\n\r\n//-------------------------------------------------------------------------------------------------------------------------------------------\r\nconst regex = /^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\r\nconst regex_t = /^([0-9]+)$/;\r\n//------------------------------ agregar ------------------------------\r\n\r\nexport const createNewUser = async(req, res) => {\r\n  const{nombre, telefono, email, contraseña} = req.body;\r\n  \r\n  var quantity = 20;\r\n  \r\n  //validacion\r\n  if(telefono == null || nombre == null ||  contraseña == null || email == null\r\n    || !regex.test(email)\r\n    || (telefono.toString()).length != 8  \r\n    || contraseña.length<5\r\n    ||  !regex_t.test(telefono) ){\r\n      return res.json({status:400 , msg: \"Bad Reques\"});\r\n\r\n  }\r\n\r\n\r\n\r\n  try{\r\n      const pool = await getConnection();\r\n\r\n       const result = await pool\r\n      .request()\r\n      .input(\"email\", sql.VarChar, email)\r\n      .input(\"telefono\", sql.Int, telefono)\r\n      .input(\"quantity\", sql.Int, quantity)\r\n      .query(\"Select telefono From usuario Where email = @email or telefono = @telefono\");\r\n\r\n      if(result.recordset.length != 0){\r\n        return res.json({status:400 , msg: \"teléfono o email ya existente\"});\r\n      }\r\n\r\n      \r\n      await pool\r\n      .request()\r\n      .input(\"nombre\", sql.VarChar, nombre)\r\n      .input(\"telefono\", sql.Int, telefono)\r\n      .input(\"email\", sql.VarChar, email)\r\n      .input(\"contraseña\", sql.VarChar, contraseña)\r\n      .input(\"quantity\", sql.Int, quantity)\r\n      .query(\" INSERT INTO usuario (telefono,nombre,email,contraseña) VALUES (@telefono,@nombre,@email,@contraseña); \");\r\n\r\n    return res.json({ status: 1, msg: \"usuario insertado satisfactoriamente\" });\r\n  } catch (error) {\r\n    res.status(500);\r\n    res.send(error.message);\r\n  }\r\n  \r\n};\r\n\r\nexport const createNewTrabajador = async(req, res) => {\r\n  const{nombre, telefono, email, contraseña, dpi, cv, antecedentes} = req.body;\r\n  console.log(req.body );\r\n  console.log(contraseña);\r\n  var quantity = 20;\r\n  \r\n  //validacion\r\n  if(telefono == null || nombre == null ||  contraseña == null || email == null || dpi==null || cv == null || antecedentes == null\r\n    || !regex.test(email)\r\n    || (telefono.toString()).length != 8  \r\n    || contraseña.length<5\r\n    ||  !regex_t.test(telefono) \r\n      ){\r\n      return res.json({status: 400 ,msg: \"Bad Reques\"});\r\n\r\n  }\r\n\r\n\r\n\r\n  try{\r\n      const pool = await getConnection();\r\n\r\n       const result = await pool\r\n      .request()\r\n      .input(\"email\", sql.VarChar, email)\r\n      .input(\"telefono\", sql.Int, telefono)\r\n      .input(\"quantity\", sql.Int, quantity)\r\n      .query(\"Select telefono From trabajador Where email = @email or telefono = @telefono \");\r\n\r\n      if(result.recordset.length != 0){\r\n        return res.json({status: 400 ,msg: \"teléfono o email  ya existente\"});\r\n      }\r\n\r\n      var quantity = 100;\r\n      const result2 =await pool\r\n      .request()\r\n      .input(\"nombre\", sql.VarChar, nombre)\r\n      .input(\"telefono\", sql.Int, telefono)\r\n      .input(\"email\", sql.VarChar, email)\r\n      .input(\"contraseña\", sql.VarChar, contraseña)\r\n      .input(\"dpi\", sql.VarChar, dpi)\r\n      .input(\"cv\", sql.VarChar, cv)\r\n      .input(\"antecedentes\", sql.VarChar, antecedentes)\r\n      .input(\"quantity\", sql.Int, quantity)\r\n      .query(\"INSERT INTO trabajador (telefono,nombre,email,contraseña, dpi, cv, antecedentes) VALUES (@telefono,@nombre,@email,@contraseña, @dpi, @cv, @antecedentes);\");\r\n      \r\n    return res.json({ status: 1, msg: \"trabajador insertado satisfactoriamente\" });\r\n  } catch (error) {\r\n    res.status(500);\r\n    res.send(error.message);\r\n  }\r\n  \r\n};\r\n\r\nexport const CreateNewFeedBack = async(req, res)=>{\r\n  const { id_p, id_u, id_t, califiacion, comentarios} = req.body;\r\n  const quantity = 20;\r\n  if(id_p == null || id_u == null || id_t == null || califiacion == null || comentarios == null\r\n    || !regex_t.test(id_p) || !regex_t.test(id_u) || !regex_t.test(id_t) || !regex_t.test(califiacion)  ){\r\n      return res.json({status: 400 ,msg: \"Bad Reques\"});\r\n    }\r\n    try{\r\n      const pool = await getConnection();\r\n      await pool\r\n      .request()\r\n      .input(\"id_p\", sql.Int, id_p)\r\n      .input(\"id_u\", sql.Int, id_u)\r\n      .input(\"id_t\", sql.Int, id_t)\r\n      .input(\"califiacion\", sql.Int, califiacion)\r\n      .input(\"comentarios\", sql.VarChar, comentarios)\r\n      .input(\"quantity\", sql.Int, quantity)\r\n      .query(\"INSERT INTO feedback (id_p, id_u, id_t, califiacion, comentarios) VALUES (@id_p, @id_u, @id_t, @califiacion, @comentarios) \");\r\n      return res.json({status: 1,msg: \"Insertado satisfactoriamente\"});\r\n      \r\n    }catch(error){\r\n      res.status(500);\r\n      res.send(error.message);\r\n    }\r\n\r\n}\r\n\r\nexport const CreateNewService = async(req, res) =>{\r\n  const{servicio, descripcion} = req.body;\r\n  var quantity= 20;\r\n  if(servicio == null || descripcion == null){\r\n    return res.json({status: 400 ,msg: \"Bad Reques\"});\r\n  }\r\n  try{\r\n    const pool = await getConnection();\r\n    const result = await pool\r\n    .request()\r\n    .input(\"servicio\", sql.VarChar, servicio)\r\n    .input(\"descripcion\", sql.VarChar, descripcion)\r\n    .input(\"quantity\", sql.Int, quantity)\r\n    .query(\"Insert INTO servicios (nombre ,descripcion) VALUES (@servicio, @descripcion);\");\r\n    return res.json({msg: \"Insertado correctamente\", result: result});\r\n\r\n  }\r\n  catch(error){\r\n  res.status(500);\r\n  res.send(error.message);\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\nexport const CreateNewLugar = async(req, res) =>{\r\n  const{zona} = req.body;\r\n  var quantity = 20;\r\n  if(zona == null || !regex_t.test(zona)){\r\n    return res.json({status: 400 ,msg: \"Bad Reques\"});\r\n  }\r\n\r\n  try{\r\n    const pool = await getConnection();\r\n    const result = await pool\r\n    .request()\r\n    .input(\"zona\", sql.Int, zona)\r\n    .input(\"quantity\", sql.Int, quantity)\r\n    .query(\"INSERT INTO lugar (zona) VALUES (@zona);\")\r\n    return res.json({status:1 ,msg: \"Ingresado correctamente\"});\r\n\r\n  }catch(error){\r\n    res.status(500);\r\n    res.send(error.message);\r\n  }\r\n\r\n}\r\n\r\nexport const CreateNewTrabaja_en =  async(req, res) =>{\r\n  const {id_l, id_t } = req.body;\r\n  var quantity = 20;\r\n  if(id_l == null || id_t==null\r\n    || !regex_t.test(id_l) || !regex_t.test(id_t))\r\n    {\r\n      return res.json({status: 400 ,msg: \"Bad Reques\"});\r\n    }\r\n\r\n  try{\r\n\r\n    const pool = await getConnection();\r\n    await pool\r\n    .request()\r\n    .input(\"id_l\", sql.Int, id_l)\r\n    .input(\"id_t\", sql.Int, id_t)\r\n    .input(\"quantity\", sql.Int, quantity)\r\n    .query(\"INSERT INTO trabajador_en (id_t, id_l) VALUES (@id_t, @id_l);\");\r\n\r\n    return res.json({status:1,msg: \"Ingresado correctamente\"});\r\n  }catch(error){\r\n    res.status(500);\r\n    res.send(error.message);\r\n  }\r\n\r\n}\r\n\r\nexport const CreateNewRegistrado = async(req, res) =>{\r\n  const{id_t, id_s} = req.body;\r\n  var quantity = 20;\r\n\r\n  if(id_t == null || id_s == null \r\n    || !regex_t.test(id_t) || !regex_t.test(id_s)){\r\n      return res.json({status: 400 ,msg: \"Bad Reques\"});\r\n    }\r\n  try{\r\n    const pool = await getConnection();\r\n    await pool\r\n    .request()\r\n    .input(\"id_t\", sql.Int, id_t)\r\n    .input(\"id_s\", sql.Int, id_s)\r\n    .input(\"quantity\", sql.Int, quantity)\r\n    .query(\" INSERT INTO registrados (id_t, id_s) VALUES (@id_t, @id_s);\");\r\n    return res.json({status:1,msg:\"Insertado Satisfactoriamente\"});\r\n    \r\n  }catch(error){\r\n    res.status(500);\r\n    res.send(error.message);\r\n  }\r\n}\r\n\r\nexport const CreateNewPeticion = async(req, res) => {\r\n  const {id_u ,id_t ,id_s ,nombre ,descripcion ,lugar ,telefono_u  } = req.body;\r\n  var quantity = 20;\r\n\r\n  console.log(req.body);\r\n  console.log( (telefono_u.toString()).length);\r\n\r\n  if(id_u == null || id_t == null || id_s == null || nombre == null || descripcion == null || lugar == null || telefono_u == null || \r\n    !regex_t.test(id_u) || !regex_t.test(id_t) || !regex_t.test(id_s) || !regex_t.test(telefono_u) \r\n    || (telefono_u.toString()).length != 8 ){\r\n      return res.json({status: 400 ,msg: \"Bad Reques\"});\r\n  }\r\n  try{\r\n    const pool = await getConnection();\r\n    await pool\r\n    .request()\r\n    .input(\"id_u\", sql.Int, id_u)\r\n    .input(\"id_t\",sql.Int, id_t)\r\n    .input(\"id_s\",sql.Int, id_s)\r\n    .input(\"nombre\", sql.VarChar,  nombre)\r\n    .input(\"descripcion\",sql.VarChar, descripcion)\r\n    .input(\"lugar\", sql.VarChar, lugar)\r\n    .input(\"telefono_u\", sql.Int, telefono_u)\r\n    .input(\"quantity\", sql.Int, quantity)\r\n    .query(\"INSERT INTO peticion (id_u ,id_t ,id_s ,nombre ,descripcion ,lugar ,telefono_u,estado_t,estado_u  ) VALUES (@id_u ,@id_t ,@id_s ,@nombre ,@descripcion ,@lugar ,@telefono_u ,'P','P') \");\r\n    return res.json({ status:1,msg: \"Insertado Satisfactoriamente\"});\r\n  }catch(error){\r\n    res.status(500);\r\n    res.send(error.message);\r\n  }\r\n\r\n}\r\n\r\n\r\n//------------------------------ eliminar ------------------------------\r\n\r\n//------------------------------ editar ------------------------------\r\nexport const ChangeStateUser = async(req, res) =>{\r\n  const{id_p, estado_u} = req.body;\r\n  const quantity = 30;\r\n\r\n\r\n\r\n  if(id_p == null || estado_u == null \r\n  ||  (estado_u.toString().substring(0,1) != 'P'\r\n  &&  estado_u.toString().substring(0,1) != 'F' \r\n  &&  estado_u.toString().substring(0,1) != 'C')  ){\r\n    return res.json({status: 400 ,msg: \"Bad Reques\"});\r\n  }\r\n\r\n  try{\r\n  \r\n  const estado = estado_u.toString().substring(0,1);\r\n  const pool = await getConnection();\r\n  const exist = await pool\r\n  .request()\r\n  .input(\"id_p\", sql.Int, id_p)\r\n  .input(\"quantity\", sql.Int, quantity)\r\n  .query(\"Select id_p From peticion where id_p = @id_p\");\r\n\r\n  if(exist.recordset.length == 0){\r\n    return res.json({status: 400 ,msg: \"No existe la petición\"});\r\n  }\r\n\r\n  await pool\r\n  .request()\r\n  .input(\"id_p\", sql.Int, id_p)\r\n  .input(\"estado_u\", sql.VarChar, estado)\r\n  .input(\"quantity\", sql.Int, quantity)\r\n  .query(\"UPDATE peticion SET estado_u = @estado_u WHERE id_p = @id_p\");\r\n\r\n  return res.json({status: 1,msg: \"Fue actualizado correctamente\"});\r\n\r\n  \r\n  }catch(error){\r\n    res.status(500);\r\n    res.send(error.message);\r\n  }\r\n  \r\n\r\n}\r\n\r\nexport const ChangeStateTrabajador = async(req, res) =>{\r\n  const{id_p, estado_t}= req.body;\r\n  const quantity = 30;\r\n\r\n  if(id_p == null || estado_t == null){\r\n    return res.json({status: 400 ,msg: \"Bad Reques\"});\r\n\r\n  }\r\n\r\n  try{\r\n\r\n    const pool = await getConnection();\r\n    const exist = await pool\r\n    .request()\r\n    .input(\"id_p\", sql.Int, id_p)\r\n    .input(\"quantity\", sql.Int, quantity)\r\n    .query(\"Select id_p From peticion where id_p = @id_p\");\r\n  \r\n    if(exist.recordset.length == 0){\r\n      return res.json({status: 400 ,msg: \"No existe la petición\"});\r\n    }\r\n  \r\n    await pool\r\n    .request()\r\n    .input(\"id_p\", sql.Int, id_p)\r\n    .input(\"estado_t\", sql.VarChar, estado_t)\r\n    .input(\"quantity\", sql.Int, quantity)\r\n    .query(\"UPDATE peticion SET estado_t = @estado_t WHERE id_p = @id_p\");\r\n  \r\n    return res.json({status: 1,msg: \"Fue actualizado correctamente\"});\r\n\r\n\r\n  }catch(error){\r\n    res.status(500);\r\n    res.send(error.message);\r\n  }\r\n  \r\n}\r\n//------------------------------ buscar ------------------------------\r\nexport const GetUser = async(req, res) => {\r\n  const{email, contraseña} = req.body;\r\n  \r\n  var quantity = 20;\r\n  \r\n  //validacion\r\n  if(  contraseña == null || email == null\r\n    || !regex.test(email)\r\n    || contraseña.length<5 ){\r\n      return res.json({status: 400 ,msg: \"Bad Reques\"});\r\n\r\n  }\r\n\r\n\r\n\r\n  try{\r\n      const pool = await getConnection();\r\n\r\n       const result = await pool\r\n      .request()\r\n      .input(\"email\", sql.VarChar, email)\r\n      .input(\"contraseña\", sql.VarChar, contraseña)\r\n      .input(\"quantity\", sql.Int, quantity)\r\n      .query(\"Select * From usuario Where email = @email and contraseña = @contraseña \");\r\n\r\n      if(result.recordset.length == 0){\r\n        return res.json({ status:400, msg: \"error en el ingreso de datos\"});\r\n      }\r\n      \r\n    return res.json({ status: 1, msg: \"bienvenido \", result:result.recordset });\r\n  } catch (error) {\r\n    res.status(500);\r\n    res.send(error.message);\r\n  }\r\n  \r\n};\r\n\r\nexport const GetTrabajador = async(req, res) => {\r\n  const{ email, contraseña} = req.body;\r\n  \r\n  var quantity = 20;\r\n  \r\n  //validacion\r\n  if(  contraseña == null || email == null\r\n    || !regex.test(email)\r\n    || contraseña.length<5 ){\r\n      return res.json({status: 400 ,msg: \"Bad Reques\"});\r\n\r\n  }\r\n\r\n\r\n\r\n  try{\r\n      const pool = await getConnection();\r\n\r\n       const result = await pool\r\n      .request()\r\n      .input(\"email\", sql.VarChar, email)\r\n      .input(\"contraseña\", sql.VarChar, contraseña)\r\n      .input(\"quantity\", sql.Int, quantity)\r\n      .query(\"Select * From trabajador Where email = @email and contraseña = @contraseña \");\r\n\r\n      if(result.recordset.length == 0){\r\n        return res.json({ status:400,msg: \"error en el ingreso de datos\"});\r\n      }\r\n      \r\n    return res.json({ status: 1, msg: \"bienvenido \", result:result.recordset });\r\n  } catch (error) {\r\n    res.status(500);\r\n    res.send(error.message);\r\n  }\r\n  \r\n};\r\n\r\nexport const GetLugar = async(req, res) => {\r\n  const{ id_t} = req.body;\r\n  const quantity = 30;\r\n  if(id_t == null || !regex_t.test(id_t)){\r\n    return res.json({status: 400 ,msg: \"Bad Reques\"});\r\n  }\r\n  try{\r\n    const pool = await getConnection();\r\n    const result = await pool\r\n    .request()\r\n    .input(\"id_t\", sql.Int, id_t)\r\n    .input(\"quantity\", sql.Int, quantity)\r\n    .query(\"Select id_t , zona From trabajador_en t ,lugar l WHERE t.id_t = @id_t AND t.id_l = l.id_l\");\r\n\r\n    return res.json({ status:1, msg: \"zonas\", result: result.recordset });\r\n    \r\n    \r\n    \r\n  }catch(error){\r\n    res.status(500);\r\n    res.send(error.message);\r\n  }\r\n}\r\n\r\nexport const GetService = async(req, res) => {\r\n  const{id_t} = req.body;\r\n  const quantity = 30;\r\n  if(id_t == null || !regex_t.test(id_t)){\r\n    return res.json({status: 400 ,msg: \"Bad Reques\"});\r\n  }\r\n  try{\r\n    const pool = await getConnection();\r\n    const result = await pool\r\n    .request()\r\n    .input(\"id_t\", sql.Int, id_t)\r\n    .input(\"quantity\", sql.Int, quantity)\r\n    .query(\"Select id_t, nombre, descripcion From registrados r ,servicios s WHERE r.id_t = @id_t AND s.id_s = r.id_s\");\r\n\r\n    return res.json({ status:1, msg: \"servicios\", result: result.recordset });\r\n    \r\n    \r\n  }catch(error){\r\n  res.status(500);\r\n  res.send(error.message);\r\n  }\r\n}\r\n\r\nexport const GetPeticion = async(req, res) => {\r\n  const{id_t, id_u} = req.body;\r\n  const quantity = 100;\r\n\r\n  if((id_t == null && id_u == null ) || (!regex_t.test(id_t) && !regex_t.test(id_u) ) ){\r\n    return res.json({status: 400 ,msg: \"Bad Reques\"});\r\n\r\n  } \r\n  try{\r\n\r\n  \r\n  const pool = await getConnection();\r\n  var result;\r\n  if(id_t != null && id_t != 0)\r\n  result = await pool\r\n  .request()\r\n  .input(\"id_t\", sql.Int, id_t)\r\n  .input(\"quantity\", sql.Int, quantity)\r\n  .query(\"Select p.id_p , t.id_t, p.nombre Pnombre, p.descripcion, p.lugar , p.telefono_u, p.estado_t , p.estado_u , t.nombre Tnombre , u.nombre Unombre  from peticion p, usuario u , trabajador t,servicios s where p.id_t = @id_t and  u.id_u = p.id_u and  t.id_t = p.id_t and  p.id_s = s.id_s\");\r\n\r\n  else\r\n  result = await pool\r\n  .request()\r\n  .input(\"id_u\", sql.Int, id_u)\r\n  .input(\"quantity\", sql.Int, quantity)\r\n  .query(\"Select p.id_p , t.id_t, p.nombre Pnombre, p.descripcion, p.lugar , p.telefono_u, p.estado_t , p.estado_u , t.nombre Tnombre , u.nombre Unombre  from peticion p, usuario u , trabajador t,servicios s where p.id_u = @id_u and  u.id_u = p.id_u and  t.id_t = p.id_t and  p.id_s = s.id_s\");\r\n\r\n  return res.json({ status:1, msg: \"Peticiones\", result: result.recordset});\r\n  }catch(error){\r\n    res.status(500);\r\n    res.send(error.message);\r\n  }\r\n\r\n}\r\n\r\nexport const GetFeedback = async(req, res) =>{\r\n  const{id_t, id_u} = req.body;\r\n  const quantity = 100;\r\n\r\n  if((id_t == null && id_u == null ) || (!regex_t.test(id_t) && !regex_t.test(id_u) ) ){\r\n    return res.json({status: 400 ,msg: \"Bad Reques\"});\r\n\r\n  } \r\n  try{\r\n    const pool = await getConnection();\r\n    var result;\r\n    if(id_t != null && id_t !=0){\r\n      result = await pool\r\n      .request()\r\n      .input(\"id_t\", sql.Int , id_t)\r\n      .input(\"quantity\", sql.Int, quantity)\r\n      .query(\"Select f.id_f, p.id_p , f.califiacion , f.comentarios , p.nombre Pnombre, t.nombre  Tnombre, u.nombre Unombre from feedback f, usuario u , trabajador t, peticion p where f.id_t = @id_t and u.id_u = f.id_u and   t.id_t = f.id_t  and  p.id_p = f.id_p\");\r\n\r\n\r\n    }\r\n    else{\r\n      result = await pool\r\n      .request()\r\n      .input(\"id_u\", sql.Int , id_u)\r\n      .input(\"quantity\", sql.Int, quantity)\r\n      .query(\"Select f.id_f, p.id_p , f.califiacion , f.comentarios , p.nombre Pnombre, t.nombre  Tnombre, u.nombre Unombre from feedback f, usuario u , trabajador t, peticion p where f.id_u = @id_u and u.id_u = f.id_u and   t.id_t = f.id_t  and  p.id_p = f.id_p\");\r\n\r\n    }\r\n\r\n    return res.json({ status: 1 , msg: \"Feedback\", result:result.recordset});\r\n\r\n  }catch(error){\r\n    res.status(500);\r\n    res.send(error.message);\r\n  }\r\n\r\n\r\n}\r\n\r\nexport const GetTrabajadorLugarService = async(req, res)=>{\r\n  const{id_l, id_s} = req.body;\r\n  const quantity = 30;\r\n\r\n  if(id_l == null || id_s== null || !regex_t.test(id_l) || !regex_t.test(id_s) ){\r\n    return res.json({status: 400 ,msg: \"Bad Reques\"});\r\n  }\r\n\r\n  try{\r\n    const pool = await getConnection();\r\n    const result = await pool\r\n    .request()\r\n    .input(\"id_l\", sql.Int, id_l)\r\n    .input(\"id_S\", sql.Int, id_s)\r\n    .input(\"quantity\", sql.Int, quantity)\r\n    .query(\"Select t.id_t, t.telefono, t.nombre, t.email From trabajador t, lugar l, servicios s, trabajador_en te, registrados r where r.id_s = @id_s and te.id_l = @id_l and l.id_l = te.id_l and s.id_s = r.id_s and t.id_t = te.id_t and t.id_t = r.id_t;\");\r\n    \r\n    return res.json({status: 1, msg:\"Trabajadores\", result:result.recordset});\r\n\r\n  }catch(error){\r\n    res.status(500);\r\n    res.send(error.message);\r\n  }\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1636224821573
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\zaitoft\\\\Documents\\\\GitHub\\\\EzTaskber\\\\Backend\\\\src\\\\database\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\zaitoft\\\\Documents\\\\GitHub\\\\EzTaskber\\\\Backend\",\"filename\":\"C:\\\\Users\\\\zaitoft\\\\Documents\\\\GitHub\\\\EzTaskber\\\\Backend\\\\src\\\\database\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\zaitoft\\\\Documents\\\\GitHub\\\\EzTaskber\\\\Backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.5": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\database\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend",
      "filename": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\database\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\database\\index.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\database\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\database\\",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _connection = require(\"./connection\");\n\nObject.keys(_connection).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _connection[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _connection[key];\n    }\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcemFpdG9mdFxcRG9jdW1lbnRzXFxHaXRIdWJcXEV6VGFza2JlclxcQmFja2VuZFxcc3JjXFxkYXRhYmFzZVxcIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vY29ubmVjdGlvblwiO1xyXG5cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [],
      "mappings": ";;;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA",
      "sourceRoot": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\database\\",
      "sourcesContent": [
        "export * from \"./connection\";\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1634888861961
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\zaitoft\\\\Documents\\\\GitHub\\\\EzTaskber\\\\Backend\\\\src\\\\database\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\zaitoft\\\\Documents\\\\GitHub\\\\EzTaskber\\\\Backend\",\"filename\":\"C:\\\\Users\\\\zaitoft\\\\Documents\\\\GitHub\\\\EzTaskber\\\\Backend\\\\src\\\\database\\\\connection.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\zaitoft\\\\Documents\\\\GitHub\\\\EzTaskber\\\\Backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.5": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\database\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend",
      "filename": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\database\\connection.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\database\\connection.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\database\\connection.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\database\\",
        "sourceFileName": "connection.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"sql\", {\n  enumerable: true,\n  get: function get() {\n    return _mssql[\"default\"];\n  }\n});\nexports.getConnection = exports.dbSettings = void 0;\n\nvar _mssql = _interopRequireDefault(require(\"mssql\"));\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar dbSettings = {\n  user: 'master',\n  password: 'RFVTGBYHNa1',\n  server: 'eztaskber.database.windows.net',\n  database: 'EzTaskBer',\n  // port: 1433,\n  options: {\n    encrypt: true,\n    // for azure\n    trustServerCertificate: true // change to true for local dev / self-signed certs\n\n  }\n};\nexports.dbSettings = dbSettings;\n\nvar getConnection = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var pool;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _mssql[\"default\"].connect(dbSettings);\n\n          case 3:\n            pool = _context.sent;\n            return _context.abrupt(\"return\", pool);\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n\n  return function getConnection() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.getConnection = getConnection;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbm5lY3Rpb24uanMiXSwibmFtZXMiOlsiZGJTZXR0aW5ncyIsInVzZXIiLCJwYXNzd29yZCIsInNlcnZlciIsImRhdGFiYXNlIiwib3B0aW9ucyIsImVuY3J5cHQiLCJ0cnVzdFNlcnZlckNlcnRpZmljYXRlIiwiZ2V0Q29ubmVjdGlvbiIsInNxbCIsImNvbm5lY3QiLCJwb29sIiwiY29uc29sZSIsImVycm9yIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7Ozs7Ozs7O0FBSU8sSUFBTUEsVUFBVSxHQUFHO0FBQ3hCQyxFQUFBQSxJQUFJLEVBQUUsUUFEa0I7QUFFeEJDLEVBQUFBLFFBQVEsRUFBRSxhQUZjO0FBR3hCQyxFQUFBQSxNQUFNLEVBQUUsZ0NBSGdCO0FBSXhCQyxFQUFBQSxRQUFRLEVBQUUsV0FKYztBQUt6QjtBQUNDQyxFQUFBQSxPQUFPLEVBQUU7QUFDUEMsSUFBQUEsT0FBTyxFQUFFLElBREY7QUFDUTtBQUNmQyxJQUFBQSxzQkFBc0IsRUFBRSxJQUZqQixDQUV1Qjs7QUFGdkI7QUFOZSxDQUFuQjs7O0FBWUEsSUFBTUMsYUFBYTtBQUFBLHFFQUFHO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxtQkFFTkMsa0JBQUlDLE9BQUosQ0FBWVYsVUFBWixDQUZNOztBQUFBO0FBRW5CVyxZQUFBQSxJQUZtQjtBQUFBLDZDQUdsQkEsSUFIa0I7O0FBQUE7QUFBQTtBQUFBO0FBS3pCQyxZQUFBQSxPQUFPLENBQUNDLEtBQVI7O0FBTHlCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQUg7O0FBQUEsa0JBQWJMLGFBQWE7QUFBQTtBQUFBO0FBQUEsR0FBbkIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFx6YWl0b2Z0XFxEb2N1bWVudHNcXEdpdEh1YlxcRXpUYXNrYmVyXFxCYWNrZW5kXFxzcmNcXGRhdGFiYXNlXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc3FsIGZyb20gXCJtc3NxbFwiO1xyXG5pbXBvcnQgY29uZmlnIGZyb20gXCIuLi9jb25maWdcIjtcclxuXHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IGRiU2V0dGluZ3MgPSB7XHJcbiAgdXNlcjogJ21hc3RlcicsXHJcbiAgcGFzc3dvcmQ6ICdSRlZUR0JZSE5hMScsXHJcbiAgc2VydmVyOiAnZXp0YXNrYmVyLmRhdGFiYXNlLndpbmRvd3MubmV0JyxcclxuICBkYXRhYmFzZTogJ0V6VGFza0JlcicsXHJcbiAvLyBwb3J0OiAxNDMzLFxyXG4gIG9wdGlvbnM6IHtcclxuICAgIGVuY3J5cHQ6IHRydWUsIC8vIGZvciBhenVyZVxyXG4gICAgdHJ1c3RTZXJ2ZXJDZXJ0aWZpY2F0ZTogdHJ1ZSwgLy8gY2hhbmdlIHRvIHRydWUgZm9yIGxvY2FsIGRldiAvIHNlbGYtc2lnbmVkIGNlcnRzXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBnZXRDb25uZWN0aW9uID0gYXN5bmMgKCkgPT4ge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zdCBwb29sID0gYXdhaXQgc3FsLmNvbm5lY3QoZGJTZXR0aW5ncyk7XHJcbiAgICByZXR1cm4gcG9vbDtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcihlcnJvcik7XHJcbiAgfVxyXG59O1xyXG5leHBvcnQgeyBzcWwgfTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "connection.js"
      ],
      "names": [
        "dbSettings",
        "user",
        "password",
        "server",
        "database",
        "options",
        "encrypt",
        "trustServerCertificate",
        "getConnection",
        "sql",
        "connect",
        "pool",
        "console",
        "error"
      ],
      "mappings": ";;;;;;;;;;;;;AAAA;;AACA;;;;;;;;AAIO,IAAMA,UAAU,GAAG;AACxBC,EAAAA,IAAI,EAAE,QADkB;AAExBC,EAAAA,QAAQ,EAAE,aAFc;AAGxBC,EAAAA,MAAM,EAAE,gCAHgB;AAIxBC,EAAAA,QAAQ,EAAE,WAJc;AAKzB;AACCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE,IADF;AACQ;AACfC,IAAAA,sBAAsB,EAAE,IAFjB,CAEuB;;AAFvB;AANe,CAAnB;;;AAYA,IAAMC,aAAa;AAAA,qEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAENC,kBAAIC,OAAJ,CAAYV,UAAZ,CAFM;;AAAA;AAEnBW,YAAAA,IAFmB;AAAA,6CAGlBA,IAHkB;;AAAA;AAAA;AAAA;AAKzBC,YAAAA,OAAO,CAACC,KAAR;;AALyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbL,aAAa;AAAA;AAAA;AAAA,GAAnB",
      "sourceRoot": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\database\\",
      "sourcesContent": [
        "import sql from \"mssql\";\r\nimport config from \"../config\";\r\n\r\n\r\n\r\nexport const dbSettings = {\r\n  user: 'master',\r\n  password: 'RFVTGBYHNa1',\r\n  server: 'eztaskber.database.windows.net',\r\n  database: 'EzTaskBer',\r\n // port: 1433,\r\n  options: {\r\n    encrypt: true, // for azure\r\n    trustServerCertificate: true, // change to true for local dev / self-signed certs\r\n  },\r\n};\r\n\r\nexport const getConnection = async () => {\r\n  try {\r\n    const pool = await sql.connect(dbSettings);\r\n    return pool;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\nexport { sql };\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1636935078592
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\zaitoft\\\\Documents\\\\GitHub\\\\EzTaskber\\\\Backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\zaitoft\\\\Documents\\\\GitHub\\\\EzTaskber\\\\Backend\",\"filename\":\"C:\\\\Users\\\\zaitoft\\\\Documents\\\\GitHub\\\\EzTaskber\\\\Backend\\\\src\\\\config.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\zaitoft\\\\Documents\\\\GitHub\\\\EzTaskber\\\\Backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.5": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend",
      "filename": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\config.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\config.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\",
        "sourceFileName": "config.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _dotenv = require(\"dotenv\");\n\n(0, _dotenv.config)();\nvar _default = {\n  port: process.env.PORT || 3000,\n  dbUserC: process.env.DB_USERC || \"\",\n  dbPasswordC: process.env.DB_PASSWORDC || \"\",\n  dbServerC: process.env.DB_SERVERC || \"\",\n  dbDatabaseC: process.env.DB_DATABASEC || \"\"\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyJdLCJuYW1lcyI6WyJwb3J0IiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCJkYlVzZXJDIiwiREJfVVNFUkMiLCJkYlBhc3N3b3JkQyIsIkRCX1BBU1NXT1JEQyIsImRiU2VydmVyQyIsIkRCX1NFUlZFUkMiLCJkYkRhdGFiYXNlQyIsIkRCX0RBVEFCQVNFQyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBO2VBRWU7QUFDYkEsRUFBQUEsSUFBSSxFQUFFQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBWixJQUFvQixJQURiO0FBRWJDLEVBQUFBLE9BQU8sRUFBRUgsT0FBTyxDQUFDQyxHQUFSLENBQVlHLFFBQVosSUFBd0IsRUFGcEI7QUFHYkMsRUFBQUEsV0FBVyxFQUFFTCxPQUFPLENBQUNDLEdBQVIsQ0FBWUssWUFBWixJQUE0QixFQUg1QjtBQUliQyxFQUFBQSxTQUFTLEVBQUVQLE9BQU8sQ0FBQ0MsR0FBUixDQUFZTyxVQUFaLElBQTBCLEVBSnhCO0FBS2JDLEVBQUFBLFdBQVcsRUFBRVQsT0FBTyxDQUFDQyxHQUFSLENBQVlTLFlBQVosSUFBNEI7QUFMNUIsQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHphaXRvZnRcXERvY3VtZW50c1xcR2l0SHViXFxFelRhc2tiZXJcXEJhY2tlbmRcXHNyY1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29uZmlnIH0gZnJvbSBcImRvdGVudlwiO1xyXG5jb25maWcoKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICBwb3J0OiBwcm9jZXNzLmVudi5QT1JUIHx8IDMwMDAsXHJcbiAgZGJVc2VyQzogcHJvY2Vzcy5lbnYuREJfVVNFUkMgfHwgXCJcIixcclxuICBkYlBhc3N3b3JkQzogcHJvY2Vzcy5lbnYuREJfUEFTU1dPUkRDIHx8IFwiXCIsXHJcbiAgZGJTZXJ2ZXJDOiBwcm9jZXNzLmVudi5EQl9TRVJWRVJDIHx8IFwiXCIsXHJcbiAgZGJEYXRhYmFzZUM6IHByb2Nlc3MuZW52LkRCX0RBVEFCQVNFQyB8fCBcIlwiLFxyXG59O1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "port",
        "process",
        "env",
        "PORT",
        "dbUserC",
        "DB_USERC",
        "dbPasswordC",
        "DB_PASSWORDC",
        "dbServerC",
        "DB_SERVERC",
        "dbDatabaseC",
        "DB_DATABASEC"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;eAEe;AACbA,EAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IADb;AAEbC,EAAAA,OAAO,EAAEH,OAAO,CAACC,GAAR,CAAYG,QAAZ,IAAwB,EAFpB;AAGbC,EAAAA,WAAW,EAAEL,OAAO,CAACC,GAAR,CAAYK,YAAZ,IAA4B,EAH5B;AAIbC,EAAAA,SAAS,EAAEP,OAAO,CAACC,GAAR,CAAYO,UAAZ,IAA0B,EAJxB;AAKbC,EAAAA,WAAW,EAAET,OAAO,CAACC,GAAR,CAAYS,YAAZ,IAA4B;AAL5B,C",
      "sourceRoot": "C:\\Users\\zaitoft\\Documents\\GitHub\\EzTaskber\\Backend\\src\\",
      "sourcesContent": [
        "import { config } from \"dotenv\";\r\nconfig();\r\n\r\nexport default {\r\n  port: process.env.PORT || 3000,\r\n  dbUserC: process.env.DB_USERC || \"\",\r\n  dbPasswordC: process.env.DB_PASSWORDC || \"\",\r\n  dbServerC: process.env.DB_SERVERC || \"\",\r\n  dbDatabaseC: process.env.DB_DATABASEC || \"\",\r\n};\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1634888861958
  }
}